{"ast":null,"code":"const appendProjectToUser = (projID, firestore, uid) => {\n  const userRef = firestore.collection(\"users\").doc(uid);\n  userRef.get().then(doc => {\n    const userData = doc.data(); // is there cleaner way to do this besides push?\n\n    var updated = userData.projects;\n    const length = updated.push(projID);\n    userRef.update({ ...userData,\n      projects: updated\n    });\n  }).catch(err => {\n    console.log(\"Uh oh something wrong\", err);\n  });\n};\n\nexport const createProject = project => {\n  return (dispatch, getState, {\n    getFirestore\n  }) => {\n    // make async call to database\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorID = getState().firebase.auth.uid;\n    firestore.collection(\"projects\").add({ ...project,\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorID,\n      createdAt: new Date()\n    }).then(snapshot => {\n      // Add projectID to user\n      appendProjectToUser(snapshot.id, firestore, authorID);\n      dispatch({\n        type: \"CREATE_PROJECT\",\n        project\n      });\n    }).catch(err => {\n      dispatch({\n        type: \"CREATE_PROJECT_ERROR\",\n        err\n      });\n    });\n  };\n};\n/*\n\nNote to self from youtube comment\n\nJoel Greek\n1 year ago\nYou probably figured this out already since you wrote this 4 months ago but maybe someone else who watches this video now will ask the same question:\nOne could probably do this in the firestore cloud I guess. (Lesson 32), if you set the 'allow read, write: if request.auth.uid != userId'\nNot sure if this is best practice, (probably not), but it works. cheers!\n\n*/","map":{"version":3,"sources":["/Users/lenny/Coding/Personal/MLforAll/frontend/src/store/actions/projectActions.js"],"names":["appendProjectToUser","projID","firestore","uid","userRef","collection","doc","get","then","userData","data","updated","projects","length","push","update","catch","err","console","log","createProject","project","dispatch","getState","getFirestore","profile","firebase","authorID","auth","add","authorFirstName","firstName","authorLastName","lastName","createdAt","Date","snapshot","id","type"],"mappings":"AAAA,MAAMA,mBAAmB,GAAG,CAACC,MAAD,EAASC,SAAT,EAAoBC,GAApB,KAA4B;AACvD,QAAMC,OAAO,GAAGF,SAAS,CAACG,UAAV,CAAqB,OAArB,EAA8BC,GAA9B,CAAkCH,GAAlC,CAAhB;AACAC,EAAAA,OAAO,CACLG,GADF,GAEEC,IAFF,CAEQF,GAAD,IAAS;AACd,UAAMG,QAAQ,GAAGH,GAAG,CAACI,IAAJ,EAAjB,CADc,CAEd;;AACA,QAAIC,OAAO,GAAGF,QAAQ,CAACG,QAAvB;AACA,UAAMC,MAAM,GAAGF,OAAO,CAACG,IAAR,CAAab,MAAb,CAAf;AACAG,IAAAA,OAAO,CAACW,MAAR,CAAe,EACd,GAAGN,QADW;AAEdG,MAAAA,QAAQ,EAAED;AAFI,KAAf;AAIA,GAXF,EAYEK,KAZF,CAYSC,GAAD,IAAS;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,GAArC;AACA,GAdF;AAeA,CAjBD;;AAmBA,OAAO,MAAMG,aAAa,GAAIC,OAAD,IAAa;AACzC,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAAEC,IAAAA;AAAF,GAArB,KAA0C;AAChD;AACA,UAAMtB,SAAS,GAAGsB,YAAY,EAA9B;AACA,UAAMC,OAAO,GAAGF,QAAQ,GAAGG,QAAX,CAAoBD,OAApC;AACA,UAAME,QAAQ,GAAGJ,QAAQ,GAAGG,QAAX,CAAoBE,IAApB,CAAyBzB,GAA1C;AACAD,IAAAA,SAAS,CACPG,UADF,CACa,UADb,EAEEwB,GAFF,CAEM,EACJ,GAAGR,OADC;AAEJS,MAAAA,eAAe,EAAEL,OAAO,CAACM,SAFrB;AAGJC,MAAAA,cAAc,EAAEP,OAAO,CAACQ,QAHpB;AAIJN,MAAAA,QAJI;AAKJO,MAAAA,SAAS,EAAE,IAAIC,IAAJ;AALP,KAFN,EASE3B,IATF,CASQ4B,QAAD,IAAc;AACnB;AACApC,MAAAA,mBAAmB,CAACoC,QAAQ,CAACC,EAAV,EAAcnC,SAAd,EAAyByB,QAAzB,CAAnB;AACAL,MAAAA,QAAQ,CAAC;AAAEgB,QAAAA,IAAI,EAAE,gBAAR;AAA0BjB,QAAAA;AAA1B,OAAD,CAAR;AACA,KAbF,EAcEL,KAdF,CAcSC,GAAD,IAAS;AACfK,MAAAA,QAAQ,CAAC;AAAEgB,QAAAA,IAAI,EAAE,sBAAR;AAAgCrB,QAAAA;AAAhC,OAAD,CAAR;AACA,KAhBF;AAiBA,GAtBD;AAuBA,CAxBM;AA0BP","sourcesContent":["const appendProjectToUser = (projID, firestore, uid) => {\n\tconst userRef = firestore.collection(\"users\").doc(uid);\n\tuserRef\n\t\t.get()\n\t\t.then((doc) => {\n\t\t\tconst userData = doc.data();\n\t\t\t// is there cleaner way to do this besides push?\n\t\t\tvar updated = userData.projects;\n\t\t\tconst length = updated.push(projID);\n\t\t\tuserRef.update({\n\t\t\t\t...userData,\n\t\t\t\tprojects: updated\n\t\t\t});\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(\"Uh oh something wrong\", err);\n\t\t});\n};\n\nexport const createProject = (project) => {\n\treturn (dispatch, getState, { getFirestore }) => {\n\t\t// make async call to database\n\t\tconst firestore = getFirestore();\n\t\tconst profile = getState().firebase.profile;\n\t\tconst authorID = getState().firebase.auth.uid;\n\t\tfirestore\n\t\t\t.collection(\"projects\")\n\t\t\t.add({\n\t\t\t\t...project,\n\t\t\t\tauthorFirstName: profile.firstName,\n\t\t\t\tauthorLastName: profile.lastName,\n\t\t\t\tauthorID,\n\t\t\t\tcreatedAt: new Date()\n\t\t\t})\n\t\t\t.then((snapshot) => {\n\t\t\t\t// Add projectID to user\n\t\t\t\tappendProjectToUser(snapshot.id, firestore, authorID);\n\t\t\t\tdispatch({ type: \"CREATE_PROJECT\", project });\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tdispatch({ type: \"CREATE_PROJECT_ERROR\", err });\n\t\t\t});\n\t};\n};\n\n/*\n\nNote to self from youtube comment\n\nJoel Greek\n1 year ago\nYou probably figured this out already since you wrote this 4 months ago but maybe someone else who watches this video now will ask the same question:\nOne could probably do this in the firestore cloud I guess. (Lesson 32), if you set the 'allow read, write: if request.auth.uid != userId'\nNot sure if this is best practice, (probably not), but it works. cheers!\n\n*/\n"]},"metadata":{},"sourceType":"module"}