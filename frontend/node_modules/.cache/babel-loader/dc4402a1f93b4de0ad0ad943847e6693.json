{"ast":null,"code":"import React from \"react\";\n\nconst getProject = firestore => {\n  return projID => {\n    return firestore.collection(\"projects\").doc(projID).get().then(doc => {\n      return doc.data();\n    }).catch(err => {\n      console.log(\"error with project firestore\", err);\n    });\n  };\n};\n\nconst getMyList = (uid, firestore) => {\n  return firestore.collection(\"users\").doc(uid).get().then(doc => {\n    return doc.data().projects;\n  }).catch(err => {\n    console.log(\"Error with user firestore\", err);\n  });\n};\n\nconst fetchMine = (uid, firestore) => {\n  const myproj = getMyList(uid, firestore); // list of project id's\n\n  return myproj.map(getProject(firestore));\n};\n\nexport default fetchMine;","map":{"version":3,"sources":["/Users/lenny/Coding/Personal/MLforAll/frontend/src/components/dashboard/fetchmine.js"],"names":["React","getProject","firestore","projID","collection","doc","get","then","data","catch","err","console","log","getMyList","uid","projects","fetchMine","myproj","map"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAU,GAAIC,SAAD,IAAe;AACjC,SAAQC,MAAD,IAAY;AAClB,WAAOD,SAAS,CACdE,UADK,CACM,UADN,EAELC,GAFK,CAEDF,MAFC,EAGLG,GAHK,GAILC,IAJK,CAICF,GAAD,IAAS;AACd,aAAOA,GAAG,CAACG,IAAJ,EAAP;AACA,KANK,EAOLC,KAPK,CAOEC,GAAD,IAAS;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CF,GAA5C;AACA,KATK,CAAP;AAUA,GAXD;AAYA,CAbD;;AAeA,MAAMG,SAAS,GAAG,CAACC,GAAD,EAAMZ,SAAN,KAAoB;AACrC,SAAOA,SAAS,CACdE,UADK,CACM,OADN,EAELC,GAFK,CAEDS,GAFC,EAGLR,GAHK,GAILC,IAJK,CAICF,GAAD,IAAS;AACd,WAAOA,GAAG,CAACG,IAAJ,GAAWO,QAAlB;AACA,GANK,EAOLN,KAPK,CAOEC,GAAD,IAAS;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,GAAzC;AACA,GATK,CAAP;AAUA,CAXD;;AAaA,MAAMM,SAAS,GAAG,CAACF,GAAD,EAAMZ,SAAN,KAAoB;AACrC,QAAMe,MAAM,GAAGJ,SAAS,CAACC,GAAD,EAAMZ,SAAN,CAAxB,CADqC,CACK;;AAC1C,SAAOe,MAAM,CAACC,GAAP,CAAWjB,UAAU,CAACC,SAAD,CAArB,CAAP;AACA,CAHD;;AAKA,eAAec,SAAf","sourcesContent":["import React from \"react\";\n\nconst getProject = (firestore) => {\n\treturn (projID) => {\n\t\treturn firestore\n\t\t\t.collection(\"projects\")\n\t\t\t.doc(projID)\n\t\t\t.get()\n\t\t\t.then((doc) => {\n\t\t\t\treturn doc.data();\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(\"error with project firestore\", err);\n\t\t\t});\n\t};\n};\n\nconst getMyList = (uid, firestore) => {\n\treturn firestore\n\t\t.collection(\"users\")\n\t\t.doc(uid)\n\t\t.get()\n\t\t.then((doc) => {\n\t\t\treturn doc.data().projects;\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(\"Error with user firestore\", err);\n\t\t});\n};\n\nconst fetchMine = (uid, firestore) => {\n\tconst myproj = getMyList(uid, firestore); // list of project id's\n\treturn myproj.map(getProject(firestore));\n};\n\nexport default fetchMine;\n"]},"metadata":{},"sourceType":"module"}