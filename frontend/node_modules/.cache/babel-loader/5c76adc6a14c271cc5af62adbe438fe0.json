{"ast":null,"code":"/*\n\nconst appendProjectToUser = (projID, firestore, uid) => {\n\tconst userRef = firestore.collection(\"users\").doc(uid);\n\tuserRef\n\t\t.get()\n\t\t.then((doc) => {\n\t\t\tconst userData = doc.data();\n\t\t\t// is there cleaner way to do this besides push?\n\t\t\tvar updated = userData.projectList;\n\t\t\tconst length = updated.push(projID);\n\t\t\tuserRef.update({\n\t\t\t\t...userData,\n\t\t\t\tprojects: updated\n\t\t\t});\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(\"Uh oh something wrong with appending list\", err);\n\t\t});\n};\n\n*/\n\n/*\nconst addUserProject = (projID, firestore, uid, proj, fname, lname, date) => {\n\tfirestore\n\t\t.collection(\"users\")\n\t\t.doc(uid)\n\t\t.collection(\"user_projects\")\n\t\t.doc(projID)\n\t\t.set({\n\t\t\t...proj,\n\t\t\tauthorFirstName: fname,\n\t\t\tauthorLastName: lname,\n\t\t\tauthorID: uid,\n\t\t\tcreatedAt: date\n\t\t})\n\t\t.then()\n\t\t.catch();\n\tconsole.log(\"USER PROJECT ADDED\");\n};\n*/\nexport const createProject = project => {\n  return (dispatch, getState, {\n    getFirestore\n  }) => {\n    // make async call to database\n    const firestore = getFirestore();\n    const fname = getState().firebase.profile.firstName;\n    const lname = getState().firebase.profile.lastName;\n    const uid = getState().firebase.auth.uid;\n    const date = new Date();\n    firestore.collection(\"projects\").add({ ...project,\n      authorFirstName: fname,\n      authorLastName: lname,\n      authorID: uid,\n      createdAt: date\n    }).then(snapshot => {\n      // Instead we will opt for querying\n      // Add projectID to user\n      // appendProjectToUser(snapshot.id, firestore, authorID);\n\n      /*addUserProject(\n      \tsnapshot.id,\n      \tfirestore,\n      \tuid,\n      \tproject,\n      \tfname,\n      \tlname,\n      \tdate\n      );*/\n      dispatch({\n        type: \"CREATE_PROJECT\",\n        project\n      });\n    }).catch(err => {\n      dispatch({\n        type: \"CREATE_PROJECT_ERROR\",\n        err\n      });\n    });\n  };\n};\n/*\n\nNote to self from youtube comment\n\nJoel Greek\n1 year ago\nYou probably figured this out already since you wrote this 4 months ago but maybe someone else who watches this video now will ask the same question:\nOne could probably do this in the firestore cloud I guess. (Lesson 32), if you set the 'allow read, write: if request.auth.uid != userId'\nNot sure if this is best practice, (probably not), but it works. cheers!\n\n*/","map":{"version":3,"sources":["/Users/lenny/Coding/Personal/MLforAll/frontend/src/store/actions/projectActions.js"],"names":["createProject","project","dispatch","getState","getFirestore","firestore","fname","firebase","profile","firstName","lname","lastName","uid","auth","date","Date","collection","add","authorFirstName","authorLastName","authorID","createdAt","then","snapshot","type","catch","err"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;AAsBA;;;;;;;;;;;;;;;;;;;AAoBA,OAAO,MAAMA,aAAa,GAAIC,OAAD,IAAa;AACzC,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAAEC,IAAAA;AAAF,GAArB,KAA0C;AAChD;AACA,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AACA,UAAME,KAAK,GAAGH,QAAQ,GAAGI,QAAX,CAAoBC,OAApB,CAA4BC,SAA1C;AACA,UAAMC,KAAK,GAAGP,QAAQ,GAAGI,QAAX,CAAoBC,OAApB,CAA4BG,QAA1C;AACA,UAAMC,GAAG,GAAGT,QAAQ,GAAGI,QAAX,CAAoBM,IAApB,CAAyBD,GAArC;AACA,UAAME,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACAV,IAAAA,SAAS,CACPW,UADF,CACa,UADb,EAEEC,GAFF,CAEM,EACJ,GAAGhB,OADC;AAEJiB,MAAAA,eAAe,EAAEZ,KAFb;AAGJa,MAAAA,cAAc,EAAET,KAHZ;AAIJU,MAAAA,QAAQ,EAAER,GAJN;AAKJS,MAAAA,SAAS,EAAEP;AALP,KAFN,EASEQ,IATF,CASQC,QAAD,IAAc;AACnB;AACA;AACA;;AACA;;;;;;;;;AASArB,MAAAA,QAAQ,CAAC;AAAEsB,QAAAA,IAAI,EAAE,gBAAR;AAA0BvB,QAAAA;AAA1B,OAAD,CAAR;AACA,KAvBF,EAwBEwB,KAxBF,CAwBSC,GAAD,IAAS;AACfxB,MAAAA,QAAQ,CAAC;AAAEsB,QAAAA,IAAI,EAAE,sBAAR;AAAgCE,QAAAA;AAAhC,OAAD,CAAR;AACA,KA1BF;AA2BA,GAlCD;AAmCA,CApCM;AAsCP","sourcesContent":["/*\n\nconst appendProjectToUser = (projID, firestore, uid) => {\n\tconst userRef = firestore.collection(\"users\").doc(uid);\n\tuserRef\n\t\t.get()\n\t\t.then((doc) => {\n\t\t\tconst userData = doc.data();\n\t\t\t// is there cleaner way to do this besides push?\n\t\t\tvar updated = userData.projectList;\n\t\t\tconst length = updated.push(projID);\n\t\t\tuserRef.update({\n\t\t\t\t...userData,\n\t\t\t\tprojects: updated\n\t\t\t});\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(\"Uh oh something wrong with appending list\", err);\n\t\t});\n};\n\n*/\n/*\nconst addUserProject = (projID, firestore, uid, proj, fname, lname, date) => {\n\tfirestore\n\t\t.collection(\"users\")\n\t\t.doc(uid)\n\t\t.collection(\"user_projects\")\n\t\t.doc(projID)\n\t\t.set({\n\t\t\t...proj,\n\t\t\tauthorFirstName: fname,\n\t\t\tauthorLastName: lname,\n\t\t\tauthorID: uid,\n\t\t\tcreatedAt: date\n\t\t})\n\t\t.then()\n\t\t.catch();\n\tconsole.log(\"USER PROJECT ADDED\");\n};\n*/\n\nexport const createProject = (project) => {\n\treturn (dispatch, getState, { getFirestore }) => {\n\t\t// make async call to database\n\t\tconst firestore = getFirestore();\n\t\tconst fname = getState().firebase.profile.firstName;\n\t\tconst lname = getState().firebase.profile.lastName;\n\t\tconst uid = getState().firebase.auth.uid;\n\t\tconst date = new Date();\n\t\tfirestore\n\t\t\t.collection(\"projects\")\n\t\t\t.add({\n\t\t\t\t...project,\n\t\t\t\tauthorFirstName: fname,\n\t\t\t\tauthorLastName: lname,\n\t\t\t\tauthorID: uid,\n\t\t\t\tcreatedAt: date\n\t\t\t})\n\t\t\t.then((snapshot) => {\n\t\t\t\t// Instead we will opt for querying\n\t\t\t\t// Add projectID to user\n\t\t\t\t// appendProjectToUser(snapshot.id, firestore, authorID);\n\t\t\t\t/*addUserProject(\n\t\t\t\t\tsnapshot.id,\n\t\t\t\t\tfirestore,\n\t\t\t\t\tuid,\n\t\t\t\t\tproject,\n\t\t\t\t\tfname,\n\t\t\t\t\tlname,\n\t\t\t\t\tdate\n\t\t\t\t);*/\n\t\t\t\tdispatch({ type: \"CREATE_PROJECT\", project });\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tdispatch({ type: \"CREATE_PROJECT_ERROR\", err });\n\t\t\t});\n\t};\n};\n\n/*\n\nNote to self from youtube comment\n\nJoel Greek\n1 year ago\nYou probably figured this out already since you wrote this 4 months ago but maybe someone else who watches this video now will ask the same question:\nOne could probably do this in the firestore cloud I guess. (Lesson 32), if you set the 'allow read, write: if request.auth.uid != userId'\nNot sure if this is best practice, (probably not), but it works. cheers!\n\n*/\n"]},"metadata":{},"sourceType":"module"}