{"ast":null,"code":"var _jsxFileName = \"/Users/lenny/Coding/Personal/MLforAll/frontend/src/components/dashboard/myprojects.js\";\nimport React, { Component } from \"react\";\nimport ProjectList from \"../projects/projectlist\";\nimport { connect } from \"react-redux\";\nimport { useFirestore, firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\n\nconst getProject = (projID, firestore) => {\n  return firestore.collection(\"projects\").doc(projID).get().then(doc => {\n    return doc.data();\n  }).catch(err => {\n    console.log(\"error with project firestore\", err);\n  });\n};\n\nconst getMyList = (uid, firestore) => {\n  return firestore.collection(\"users\").doc(uid).get().then(doc => {\n    return doc.data().projects;\n  }).catch(err => {\n    console.log(\"Error with user firestore\", err);\n  });\n};\n\nconst fetchMine = (uid, firestore) => {\n  const myproj = getMyList(uid, firestore); // list of project id's\n\n  return myproj.map(getProject);\n};\n\nclass MyProjects extends Component {\n  render() {\n    const {\n      auth\n    } = this.props;\n    const firestore = useFirestore();\n    const projects = fetchMine(auth.uid, firestore); // TODO: change const projects so its only this user's projects\n    // Route Protection\n\n    if (!auth.uid) return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/signin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }); // otws good to go\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 6\n      }\n    }, \" You got some awesome projects! \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashboard container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col s16 m10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ProjectList, {\n      projects: projects,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 8\n      }\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(connect(mapStateToProps), firestoreConnect([{\n  collection: \"projects\",\n  orderBy: [\"createdAt\", \"desc\"]\n}]))(MyProjects);","map":{"version":3,"sources":["/Users/lenny/Coding/Personal/MLforAll/frontend/src/components/dashboard/myprojects.js"],"names":["React","Component","ProjectList","connect","useFirestore","firestoreConnect","compose","Redirect","getProject","projID","firestore","collection","doc","get","then","data","catch","err","console","log","getMyList","uid","projects","fetchMine","myproj","map","MyProjects","render","auth","props","textAlign","mapStateToProps","state","ordered","firebase","orderBy"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ProjectList from \"../projects/projectlist\";\nimport { connect } from \"react-redux\";\nimport { useFirestore, firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\n\nconst getProject = (projID, firestore) => {\n\treturn firestore\n\t\t.collection(\"projects\")\n\t\t.doc(projID)\n\t\t.get()\n\t\t.then((doc) => {\n\t\t\treturn doc.data();\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(\"error with project firestore\", err);\n\t\t});\n};\n\nconst getMyList = (uid, firestore) => {\n\treturn firestore\n\t\t.collection(\"users\")\n\t\t.doc(uid)\n\t\t.get()\n\t\t.then((doc) => {\n\t\t\treturn doc.data().projects;\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(\"Error with user firestore\", err);\n\t\t});\n};\n\nconst fetchMine = (uid, firestore) => {\n\tconst myproj = getMyList(uid, firestore); // list of project id's\n\treturn myproj.map(getProject);\n};\n\nclass MyProjects extends Component {\n\trender() {\n\t\tconst { auth } = this.props;\n\t\tconst firestore = useFirestore();\n\t\tconst projects = fetchMine(auth.uid, firestore);\n\t\t// TODO: change const projects so its only this user's projects\n\t\t// Route Protection\n\t\tif (!auth.uid) return <Redirect to=\"/signin\" />;\n\t\t// otws good to go\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<span style={{ textAlign: \"center\" }}>\n\t\t\t\t\t<h3> You got some awesome projects! </h3>\n\t\t\t\t</span>\n\t\t\t\t<div className=\"dashboard container\">\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"col s16 m10\">\n\t\t\t\t\t\t\t<ProjectList projects={projects} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\tconsole.log(state);\n\treturn {\n\t\tprojects: state.firestore.ordered.projects,\n\t\tauth: state.firebase.auth\n\t};\n};\n\nexport default compose(\n\tconnect(mapStateToProps),\n\tfirestoreConnect([\n\t\t{ collection: \"projects\", orderBy: [\"createdAt\", \"desc\"] }\n\t])\n)(MyProjects);\n"]},"metadata":{},"sourceType":"module"}