{"ast":null,"code":"/*\n\nconst appendProjectToUser = (projID, firestore, uid) => {\n\tconst userRef = firestore.collection(\"users\").doc(uid);\n\tuserRef\n\t\t.get()\n\t\t.then((doc) => {\n\t\t\tconst userData = doc.data();\n\t\t\t// is there cleaner way to do this besides push?\n\t\t\tvar updated = userData.projectList;\n\t\t\tconst length = updated.push(projID);\n\t\t\tuserRef.update({\n\t\t\t\t...userData,\n\t\t\t\tprojects: updated\n\t\t\t});\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(\"Uh oh something wrong with appending list\", err);\n\t\t});\n};\n\n*/\nexport const createProject = project => {\n  return (dispatch, getState, {\n    getFirestore\n  }) => {\n    // make async call to database\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorID = getState().firebase.auth.uid;\n    firestore.collection(\"projects\").add({ ...project,\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorID,\n      createdAt: new Date()\n    }).then(snapshot => {\n      // Add projectID to user\n      // appendProjectToUser(snapshot.id, firestore, authorID);\n      dispatch({\n        type: \"CREATE_PROJECT\",\n        project\n      });\n    }).catch(err => {\n      dispatch({\n        type: \"CREATE_PROJECT_ERROR\",\n        err\n      });\n    });\n  };\n};\n/*\n\nNote to self from youtube comment\n\nJoel Greek\n1 year ago\nYou probably figured this out already since you wrote this 4 months ago but maybe someone else who watches this video now will ask the same question:\nOne could probably do this in the firestore cloud I guess. (Lesson 32), if you set the 'allow read, write: if request.auth.uid != userId'\nNot sure if this is best practice, (probably not), but it works. cheers!\n\n*/","map":{"version":3,"sources":["/Users/lenny/Coding/Personal/MLforAll/frontend/src/store/actions/projectActions.js"],"names":["createProject","project","dispatch","getState","getFirestore","firestore","profile","firebase","authorID","auth","uid","collection","add","authorFirstName","firstName","authorLastName","lastName","createdAt","Date","then","snapshot","type","catch","err"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;AAuBA,OAAO,MAAMA,aAAa,GAAIC,OAAD,IAAa;AACzC,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAAEC,IAAAA;AAAF,GAArB,KAA0C;AAChD;AACA,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AACA,UAAME,OAAO,GAAGH,QAAQ,GAAGI,QAAX,CAAoBD,OAApC;AACA,UAAME,QAAQ,GAAGL,QAAQ,GAAGI,QAAX,CAAoBE,IAApB,CAAyBC,GAA1C;AACAL,IAAAA,SAAS,CACPM,UADF,CACa,UADb,EAEEC,GAFF,CAEM,EACJ,GAAGX,OADC;AAEJY,MAAAA,eAAe,EAAEP,OAAO,CAACQ,SAFrB;AAGJC,MAAAA,cAAc,EAAET,OAAO,CAACU,QAHpB;AAIJR,MAAAA,QAJI;AAKJS,MAAAA,SAAS,EAAE,IAAIC,IAAJ;AALP,KAFN,EASEC,IATF,CASQC,QAAD,IAAc;AACnB;AACA;AACAlB,MAAAA,QAAQ,CAAC;AAAEmB,QAAAA,IAAI,EAAE,gBAAR;AAA0BpB,QAAAA;AAA1B,OAAD,CAAR;AACA,KAbF,EAcEqB,KAdF,CAcSC,GAAD,IAAS;AACfrB,MAAAA,QAAQ,CAAC;AAAEmB,QAAAA,IAAI,EAAE,sBAAR;AAAgCE,QAAAA;AAAhC,OAAD,CAAR;AACA,KAhBF;AAiBA,GAtBD;AAuBA,CAxBM;AA0BP","sourcesContent":["/*\n\nconst appendProjectToUser = (projID, firestore, uid) => {\n\tconst userRef = firestore.collection(\"users\").doc(uid);\n\tuserRef\n\t\t.get()\n\t\t.then((doc) => {\n\t\t\tconst userData = doc.data();\n\t\t\t// is there cleaner way to do this besides push?\n\t\t\tvar updated = userData.projectList;\n\t\t\tconst length = updated.push(projID);\n\t\t\tuserRef.update({\n\t\t\t\t...userData,\n\t\t\t\tprojects: updated\n\t\t\t});\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.log(\"Uh oh something wrong with appending list\", err);\n\t\t});\n};\n\n*/\n\nexport const createProject = (project) => {\n\treturn (dispatch, getState, { getFirestore }) => {\n\t\t// make async call to database\n\t\tconst firestore = getFirestore();\n\t\tconst profile = getState().firebase.profile;\n\t\tconst authorID = getState().firebase.auth.uid;\n\t\tfirestore\n\t\t\t.collection(\"projects\")\n\t\t\t.add({\n\t\t\t\t...project,\n\t\t\t\tauthorFirstName: profile.firstName,\n\t\t\t\tauthorLastName: profile.lastName,\n\t\t\t\tauthorID,\n\t\t\t\tcreatedAt: new Date()\n\t\t\t})\n\t\t\t.then((snapshot) => {\n\t\t\t\t// Add projectID to user\n\t\t\t\t// appendProjectToUser(snapshot.id, firestore, authorID);\n\t\t\t\tdispatch({ type: \"CREATE_PROJECT\", project });\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tdispatch({ type: \"CREATE_PROJECT_ERROR\", err });\n\t\t\t});\n\t};\n};\n\n/*\n\nNote to self from youtube comment\n\nJoel Greek\n1 year ago\nYou probably figured this out already since you wrote this 4 months ago but maybe someone else who watches this video now will ask the same question:\nOne could probably do this in the firestore cloud I guess. (Lesson 32), if you set the 'allow read, write: if request.auth.uid != userId'\nNot sure if this is best practice, (probably not), but it works. cheers!\n\n*/\n"]},"metadata":{},"sourceType":"module"}